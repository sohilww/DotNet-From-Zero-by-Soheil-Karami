"use strict";(self.webpackChunkdot_net_from_zero_by_soheil_karami=self.webpackChunkdot_net_from_zero_by_soheil_karami||[]).push([[167],{8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var s=i(6540);const r={},l=s.createContext(r);function t(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(l.Provider,{value:n},e.children)}},9884:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"Session 1 copy/Conditionals/Variables-types-conditionals-loops","title":"Variables, Types, Conditionals, and Loops in C","description":"Understanding variables, data types, conditionals, and loops is essential in any programming language.","source":"@site/docs/Session 1 copy/Conditionals/02-Variables-types-conditionals-loops.md","sourceDirName":"Session 1 copy/Conditionals","slug":"/Session 1 copy/Conditionals/Variables-types-conditionals-loops","permalink":"/DotNet-From-Zero-by-Soheil-Karami/docs/Session 1 copy/Conditionals/Variables-types-conditionals-loops","draft":false,"unlisted":false,"editUrl":"https://github.com/sohilww/DotNet-From-Zero-by-Soheil-Karami/docs/Session 1 copy/Conditionals/02-Variables-types-conditionals-loops.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Variables, Types, Conditionals, and Loops in C","permalink":"/DotNet-From-Zero-by-Soheil-Karami/docs/Session 1 copy/Variables-types-conditionals-loops"}}');var r=i(4848),l=i(8453);const t={},o="Variables, Types, Conditionals, and Loops in C#",d={},a=[{value:"\ud83d\udd0d Dynamically Typed Languages \u2014 Explained",id:"-dynamically-typed-languages--explained",level:2},{value:"\ud83d\udd38 Example (Python):",id:"-example-python",level:3},{value:"\u2705 Pros of Dynamic Typing:",id:"-pros-of-dynamic-typing",level:2},{value:"\u274c Cons of Dynamic Typing:",id:"-cons-of-dynamic-typing",level:2},{value:"\ud83d\udcac Quick Comparison",id:"-quick-comparison",level:2},{value:"\ud83d\udd39 Variables in C#",id:"-variables-in-c",level:2},{value:"\ud83d\udd39 Common Data Types",id:"-common-data-types",level:2},{value:"\ud83d\udd39 Other Important Data Types",id:"-other-important-data-types",level:2},{value:"\ud83d\udd39 Conditionals (if, else if, else)",id:"-conditionals-if-else-if-else",level:2},{value:"\ud83d\udcd8 Example 1: Grade Evaluation",id:"-example-1-grade-evaluation",level:3},{value:"\ud83d\udcd7 Example 2: Real-life Decision \u2013 Sunglasses",id:"-example-2-real-life-decision--sunglasses",level:3},{value:"\ud83d\udd01 Loops (for, while, foreach)",id:"-loops-for-while-foreach",level:2},{value:"\ud83d\udd39 for Loop",id:"-for-loop",level:3},{value:"\ud83d\udd27 Syntax Overview",id:"-syntax-overview",level:4},{value:"\ud83d\udcd8 Example 1: Print Numbers with a <code>for</code> Loop",id:"-example-1-print-numbers-with-a-for-loop",level:4},{value:"\ud83d\udcd7 Example 2: Real-life Scenario \u2013 Drinking Water Throughout the Day",id:"-example-2-real-life-scenario--drinking-water-throughout-the-day",level:3},{value:"\ud83d\udd39 while Loop",id:"-while-loop",level:3},{value:"\ud83d\udd27 Syntax Overview",id:"-syntax-overview-1",level:4},{value:"\ud83d\udcd7 Example 3: Real-life Decision \u2013 Snoozing Your Alarm",id:"-example-3-real-life-decision--snoozing-your-alarm",level:4},{value:"\ud83d\udd39 foreach Loop",id:"-foreach-loop",level:3},{value:"\ud83d\udd27 Syntax Overview",id:"-syntax-overview-2",level:4},{value:"\ud83d\udcd8 Example 3: Iterating Over a List with <code>foreach</code>",id:"-example-3-iterating-over-a-list-with-foreach",level:4},{value:"\u2705 Summary",id:"-summary",level:2}];function c(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"variables-types-conditionals-and-loops-in-c",children:"Variables, Types, Conditionals, and Loops in C#"})}),"\n",(0,r.jsxs)(n.p,{children:["Understanding variables, data types, conditionals, and loops is essential in any programming language.",(0,r.jsx)(n.br,{}),"\n","In this article, we\u2019ll explore these core C# concepts in depth, using clear explanations, examples, and interactive questions designed for classroom discussion."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h1,{id:"-static-vs-dynamic-typing-in-programming-languages",children:"\ud83e\udde0 Static vs Dynamic Typing in Programming Languages"}),"\n",(0,r.jsxs)(n.p,{children:["C# is a ",(0,r.jsx)(n.strong,{children:"statically typed language"}),", meaning you must declare the type of every variable at the time of its definition."]}),"\n",(0,r.jsx)(n.p,{children:"This means the compiler knows the type of each variable at compile time, which helps catch errors early and improves performance."}),"\n",(0,r.jsx)(n.p,{children:"For example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'int age = 30;\nstring city = "London";\n'})}),"\n",(0,r.jsxs)(n.p,{children:["In contrast, ",(0,r.jsx)(n.strong,{children:"dynamically typed languages"})," like Python or JavaScript determine the type of a variable at runtime."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-dynamically-typed-languages--explained",children:"\ud83d\udd0d Dynamically Typed Languages \u2014 Explained"}),"\n",(0,r.jsxs)(n.p,{children:["In ",(0,r.jsx)(n.strong,{children:"dynamically typed languages"}),", you don't have to declare the type of a variable when you create it.",(0,r.jsx)(n.br,{}),"\n","The language interpreter determines the type ",(0,r.jsx)(n.strong,{children:"at runtime"}),", based on the value assigned."]}),"\n",(0,r.jsx)(n.h3,{id:"-example-python",children:"\ud83d\udd38 Example (Python):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'x = 10       # x is an integer\nx = "hello"  # now x is a string\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Here, the same variable ",(0,r.jsx)(n.code,{children:"x"})," can hold values of different types at different times, because Python decides the type dynamically."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-pros-of-dynamic-typing",children:"\u2705 Pros of Dynamic Typing:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Faster to write"}),": You don\u2019t need to think about or declare types upfront."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"More flexible"}),": One variable can hold different types at different times."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Concise code"}),": Less boilerplate, useful in scripting or rapid prototyping."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-cons-of-dynamic-typing",children:"\u274c Cons of Dynamic Typing:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"More prone to runtime errors"}),": Type-related bugs are often only caught when the program runs."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Harder to refactor"}),": Without knowing types in advance, refactoring large codebases can be risky."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tooling limitations"}),": IDEs and code editors have less context to provide autocomplete or error detection."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-quick-comparison",children:"\ud83d\udcac Quick Comparison"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Feature"}),(0,r.jsx)(n.th,{children:"Statically Typed (e.g. C#)"}),(0,r.jsx)(n.th,{children:"Dynamically Typed (e.g. Python)"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Type known at..."}),(0,r.jsx)(n.td,{children:"Compile time"}),(0,r.jsx)(n.td,{children:"Runtime"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Type declaration"}),(0,r.jsx)(n.td,{children:"Required"}),(0,r.jsx)(n.td,{children:"Not required"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Flexibility"}),(0,r.jsx)(n.td,{children:"Less flexible"}),(0,r.jsx)(n.td,{children:"More flexible"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Error detection"}),(0,r.jsx)(n.td,{children:"Early (compile time)"}),(0,r.jsx)(n.td,{children:"Late (runtime)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Performance"}),(0,r.jsx)(n.td,{children:"Generally faster at runtime"}),(0,r.jsx)(n.td,{children:"May be slower due to type checks"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,r.jsx)(n.strong,{children:"Practice"}),(0,r.jsx)(n.br,{}),"\n","Can you think of a situation where dynamic typing would be helpful? And one where it could cause trouble?"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-variables-in-c",children:"\ud83d\udd39 Variables in C#"}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.strong,{children:"variable"})," is like a container that holds a value in memory. Every variable must have a ",(0,r.jsx)(n.strong,{children:"type"})," in C#, which defines what kind of data it can store."]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,r.jsx)(n.strong,{children:"Practice"}),(0,r.jsx)(n.br,{}),"\n","What is memory in a computer program? Why is it important when working with variables?"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["C# is a ",(0,r.jsx)(n.strong,{children:"statically typed language"}),", meaning you must declare the type of every variable at the time of its definition."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'int age = 25;\nstring name = "Soheil";\nbool isActive = true;\ndouble temperature = 36.6;\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,r.jsx)(n.strong,{children:"Question for students"}),(0,r.jsx)(n.br,{}),"\n","What happens if you try to assign a string value to a variable declared as an ",(0,r.jsx)(n.code,{children:"int"}),"?"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-common-data-types",children:"\ud83d\udd39 Common Data Types"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Example"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"int"})}),(0,r.jsx)(n.td,{children:"Integer numbers"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"int count = 10;"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Text / sequence of characters"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'string name = "Ali";'})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bool"})}),(0,r.jsx)(n.td,{children:"Boolean value: true or false"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bool isLoggedIn = false;"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"double"})}),(0,r.jsx)(n.td,{children:"Floating-point with high precision"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"double pi = 3.14159;"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"char"})}),(0,r.jsx)(n.td,{children:"A single Unicode character"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"char initial = 'A';"})})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,r.jsx)(n.strong,{children:"Practice"}),(0,r.jsx)(n.br,{}),"\n","Define three variables: a student's age, their first name, and whether they passed the exam."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-other-important-data-types",children:"\ud83d\udd39 Other Important Data Types"}),"\n",(0,r.jsx)(n.p,{children:"C# supports many more useful types:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Example"}),(0,r.jsx)(n.th,{children:"Size"}),(0,r.jsx)(n.th,{children:"Range"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bool"})}),(0,r.jsx)(n.td,{children:"Boolean true/false value"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bool isReady = true;"})}),(0,r.jsx)(n.td,{children:"1 byte"}),(0,r.jsx)(n.td,{children:"true / false"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"byte"})}),(0,r.jsx)(n.td,{children:"Unsigned 8-bit integer"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"byte level = 255;"})}),(0,r.jsx)(n.td,{children:"1 byte"}),(0,r.jsx)(n.td,{children:"0 to 255"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sbyte"})}),(0,r.jsx)(n.td,{children:"Signed 8-bit integer"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sbyte offset = -128;"})}),(0,r.jsx)(n.td,{children:"1 byte"}),(0,r.jsx)(n.td,{children:"-128 to 127"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"short"})}),(0,r.jsx)(n.td,{children:"Signed 16-bit integer"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"short temp = -32000;"})}),(0,r.jsx)(n.td,{children:"2 bytes"}),(0,r.jsx)(n.td,{children:"-32,768 to 32,767"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ushort"})}),(0,r.jsx)(n.td,{children:"Unsigned 16-bit integer"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ushort u = 65000;"})}),(0,r.jsx)(n.td,{children:"2 bytes"}),(0,r.jsx)(n.td,{children:"0 to 65,535"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"int"})}),(0,r.jsx)(n.td,{children:"Signed 32-bit integer"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"int age = 30;"})}),(0,r.jsx)(n.td,{children:"4 bytes"}),(0,r.jsx)(n.td,{children:"-2,147,483,648 to 2,147,483,647"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint"})}),(0,r.jsx)(n.td,{children:"Unsigned 32-bit integer"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint count = 3000000000;"})}),(0,r.jsx)(n.td,{children:"4 bytes"}),(0,r.jsx)(n.td,{children:"0 to 4,294,967,295"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"long"})}),(0,r.jsx)(n.td,{children:"Signed 64-bit integer"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"long stars = 9000000000000000000;"})}),(0,r.jsx)(n.td,{children:"8 bytes"}),(0,r.jsx)(n.td,{children:"-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ulong"})}),(0,r.jsx)(n.td,{children:"Unsigned 64-bit integer"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ulong uStars = 18000000000000000000;"})}),(0,r.jsx)(n.td,{children:"8 bytes"}),(0,r.jsx)(n.td,{children:"0 to 18,446,744,073,709,551,615"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"float"})}),(0,r.jsx)(n.td,{children:"Single-precision floating-point number"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"float price = 19.99f;"})}),(0,r.jsx)(n.td,{children:"4 bytes"}),(0,r.jsx)(n.td,{children:"\xb11.5 \xd7 10\u207b\u2074\u2075 to \xb13.4 \xd7 10\xb3\u2078"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"double"})}),(0,r.jsx)(n.td,{children:"Double-precision floating-point number"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"double pi = 3.14159;"})}),(0,r.jsx)(n.td,{children:"8 bytes"}),(0,r.jsx)(n.td,{children:"\xb15.0 \xd7 10\u207b\xb3\xb2\u2074 to \xb11.7 \xd7 10\xb3\u2070\u2078"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"decimal"})}),(0,r.jsx)(n.td,{children:"High-precision decimal (ideal for currency)"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"decimal salary = 5000.75m;"})}),(0,r.jsx)(n.td,{children:"16 bytes"}),(0,r.jsx)(n.td,{children:"\xb11.0 \xd7 10\u207b\xb2\u2078 to \xb17.9 \xd7 10\xb2\u2078"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"char"})}),(0,r.jsx)(n.td,{children:"Single 16-bit Unicode character"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"char letter = 'A';"})}),(0,r.jsx)(n.td,{children:"2 bytes"}),(0,r.jsx)(n.td,{children:"U+0000 to U+FFFF"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Sequence of characters"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'string name = "Ali";'})}),(0,r.jsx)(n.td,{children:"Varies"}),(0,r.jsx)(n.td,{children:"Up to 2 billion characters"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"DateTime"})}),(0,r.jsx)(n.td,{children:"Date and time values"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"DateTime now = DateTime.Now;"})}),(0,r.jsx)(n.td,{children:"8 bytes"}),(0,r.jsx)(n.td,{children:"01/01/0001 to 12/31/9999"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"object"})}),(0,r.jsx)(n.td,{children:"Base type of all types in C#"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"object anything = 42;"})}),(0,r.jsx)(n.td,{children:"Reference"}),(0,r.jsx)(n.td,{children:"Can store any type"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"var"})}),(0,r.jsx)(n.td,{children:"Type inferred from the value"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"var score = 88;"})}),(0,r.jsx)(n.td,{children:"Inferred"}),(0,r.jsx)(n.td,{children:"Same as inferred type"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udca1 ",(0,r.jsx)(n.strong,{children:"Tip"}),": Always choose the most specific type for clarity and performance. Avoid ",(0,r.jsx)(n.code,{children:"var"})," unless the type is obvious from the context."]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,r.jsx)(n.strong,{children:"Question for students"}),(0,r.jsx)(n.br,{}),"\n","Why do we need both ",(0,r.jsx)(n.code,{children:"float"})," and ",(0,r.jsx)(n.code,{children:"decimal"})," in C#? Which one would you choose for storing money?"]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,r.jsx)(n.strong,{children:"Question for students"}),(0,r.jsx)(n.br,{}),"\n","What do you think are the most important things to consider when working with variables?"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,r.jsx)(n.strong,{children:"Practice"})]}),"\n",(0,r.jsx)(n.p,{children:"Write code to declare the following:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.code,{children:"decimal"})," variable for a product price"]}),"\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.code,{children:"DateTime"})," variable for today's date"]}),"\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.code,{children:"var"})," variable for your favorite number"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["\u2795 (Optional)",(0,r.jsx)(n.br,{}),"\n","Print all three variables to the console."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-conditionals-if-else-if-else",children:"\ud83d\udd39 Conditionals (if, else if, else)"}),"\n",(0,r.jsx)(n.p,{children:"Conditionals allow your program to make decisions based on certain conditions."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"-example-1-grade-evaluation",children:"\ud83d\udcd8 Example 1: Grade Evaluation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'int grade = 82;\n\nif (grade >= 90)\n{\n    Console.WriteLine("Excellent!");\n}\nelse if (grade >= 75)\n{\n    Console.WriteLine("Good job!");\n}\nelse\n{\n    Console.WriteLine("You can do better.");\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,r.jsx)(n.strong,{children:"Question for students"}),(0,r.jsx)(n.br,{}),"\n","What will be printed if ",(0,r.jsx)(n.code,{children:"grade"})," is 70? What about 95?"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,r.jsx)(n.strong,{children:"Practice"}),(0,r.jsx)(n.br,{}),"\n","Write a conditional that prints different messages for ages:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Under 18: \u201cMinor\u201d"}),"\n",(0,r.jsx)(n.li,{children:"18 to 64: \u201cAdult\u201d"}),"\n",(0,r.jsx)(n.li,{children:"65 and above: \u201cSenior\u201d"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"-example-2-real-life-decision--sunglasses",children:"\ud83d\udcd7 Example 2: Real-life Decision \u2013 Sunglasses"}),"\n",(0,r.jsx)(n.p,{children:"Think of a real-life situation:"}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe2 If it's daytime and sunny, you'll wear your sunglasses.",(0,r.jsx)(n.br,{}),"\n","\ud83d\udfe1 If it's daytime but not sunny, you won't wear them.",(0,r.jsx)(n.br,{}),"\n","\u26ab If it's night, you don't need sunglasses at all."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'bool isDaytime = true;\nbool isSunny = false;\n\nif (isDaytime && isSunny)\n{\n    Console.WriteLine("Wear sunglasses \ud83d\ude0e");\n}\nelse if (isDaytime && !isSunny)\n{\n    Console.WriteLine("No need for sunglasses.");\n}\nelse\n{\n    Console.WriteLine("It\'s night \u2014 go to sleep! \ud83c\udf19");\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,r.jsx)(n.strong,{children:"Practice"})]}),"\n",(0,r.jsx)(n.p,{children:"Think about 3 real-life situations where you make decisions based on conditions \u2014 like the sunglasses example."}),"\n",(0,r.jsxs)(n.p,{children:["For each one, write an ",(0,r.jsx)(n.code,{children:"if / else if / else"})," structure in C# that models your decision."]}),"\n",(0,r.jsx)(n.p,{children:"Example ideas:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Should I bring an umbrella?"}),"\n",(0,r.jsx)(n.li,{children:"Should I study or rest?"}),"\n",(0,r.jsx)(n.li,{children:"Should I take the bus or walk?"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Be creative and make it personal!"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-loops-for-while-foreach",children:"\ud83d\udd01 Loops (for, while, foreach)"}),"\n",(0,r.jsx)(n.p,{children:"Loops allow you to repeat actions multiple times \u2014 either a set number of times or until a certain condition is met."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"-for-loop",children:"\ud83d\udd39 for Loop"}),"\n",(0,r.jsx)(n.h4,{id:"-syntax-overview",children:"\ud83d\udd27 Syntax Overview"}),"\n",(0,r.jsx)(n.p,{children:"Used when the number of iterations is known."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"for (initialization; condition; increment)\n{\n    // code to execute each iteration\n}\n\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"-example-1-print-numbers-with-a-for-loop",children:["\ud83d\udcd8 Example 1: Print Numbers with a ",(0,r.jsx)(n.code,{children:"for"})," Loop"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'for (int i = 1; i <= 5; i++)\n{\n    Console.WriteLine($"i = {i}");\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["This loop starts from 1 and runs as long as ",(0,r.jsx)(n.code,{children:"i <= 5"}),", increasing ",(0,r.jsx)(n.code,{children:"i"})," each time."]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,r.jsx)(n.strong,{children:"Question for students"}),(0,r.jsx)(n.br,{}),"\n","What happens if you change the condition to ",(0,r.jsx)(n.code,{children:"i < 5"}),"? What if you start from ",(0,r.jsx)(n.code,{children:"i = 0"}),"?"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,r.jsx)(n.strong,{children:"Practice"}),(0,r.jsx)(n.br,{}),"\n","Write a ",(0,r.jsx)(n.code,{children:"for"})," loop that prints:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"All even numbers from 2 to 10"}),"\n",(0,r.jsx)(n.li,{children:"All odd numbers from 1 to 9"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"-example-2-real-life-scenario--drinking-water-throughout-the-day",children:"\ud83d\udcd7 Example 2: Real-life Scenario \u2013 Drinking Water Throughout the Day"}),"\n",(0,r.jsxs)(n.p,{children:["Let\u2019s say you want to drink 8 glasses of water in a day and log each one. You can use a ",(0,r.jsx)(n.code,{children:"for"})," loop to simulate this behavior:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'for (int glass = 1; glass <= 8; glass++)\n{\n    Console.WriteLine($"Glass {glass}: Drink water \ud83d\udca7");\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"This loop prints a reminder for each glass from 1 to 8."}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,r.jsx)(n.strong,{children:"Question for students"}),(0,r.jsx)(n.br,{}),"\n","What would change in the loop if you wanted to skip glass 5? Or stop after 6 glasses?"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,r.jsx)(n.strong,{children:"Practice"}),(0,r.jsx)(n.br,{}),"\n","Write a program that simulates a daily habit with a fixed number of repetitions \u2014 for example:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Brushing teeth 2 times a day"}),"\n",(0,r.jsx)(n.li,{children:"Doing 10 push-ups"}),"\n",(0,r.jsx)(n.li,{children:"Checking email 3 times"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-while-loop",children:"\ud83d\udd39 while Loop"}),"\n",(0,r.jsx)(n.h4,{id:"-syntax-overview-1",children:"\ud83d\udd27 Syntax Overview"}),"\n",(0,r.jsx)(n.p,{children:"Used when the number of iterations is known."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"while (condition)\n{\n    // code to execute\n}\n\n"})}),"\n",(0,r.jsx)(n.h4,{id:"-example-3-real-life-decision--snoozing-your-alarm",children:"\ud83d\udcd7 Example 3: Real-life Decision \u2013 Snoozing Your Alarm"}),"\n",(0,r.jsx)(n.p,{children:"Think of a situation where you repeatedly do something \u2014 like snoozing your alarm in the morning:"}),"\n",(0,r.jsx)(n.p,{children:"\ud83d\udd52 You want to snooze up to 3 times unless you decide to wake up early."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'int snoozeCount = 0;\nbool wokeUpEarly = false;\n\nwhile (snoozeCount < 3 && !wokeUpEarly)\n{\n    Console.WriteLine("Snoozing... \ud83d\ude34");\n    snoozeCount++;\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,r.jsx)(n.strong,{children:"Question for students"}),(0,r.jsx)(n.br,{}),"\n","What would happen if you set ",(0,r.jsx)(n.code,{children:"wokeUpEarly = true"})," before the loop? What if you change the snooze limit?"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,r.jsx)(n.strong,{children:"Practice"}),(0,r.jsx)(n.br,{}),"\n","Think of a repeated action you do in real life (like checking notifications, drinking water during a workout, etc.)."]}),"\n",(0,r.jsxs)(n.p,{children:["Write a loop (",(0,r.jsx)(n.code,{children:"for"})," or ",(0,r.jsx)(n.code,{children:"while"}),") that simulates this behavior in C#."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"-foreach-loop",children:"\ud83d\udd39 foreach Loop"}),"\n",(0,r.jsx)(n.h4,{id:"-syntax-overview-2",children:"\ud83d\udd27 Syntax Overview"}),"\n",(0,r.jsx)(n.p,{children:"Used when the number of iterations is known."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"foreach (var item in collection)\n{\n    // code to execute for each item\n}\n\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"-example-3-iterating-over-a-list-with-foreach",children:["\ud83d\udcd8 Example 3: Iterating Over a List with ",(0,r.jsx)(n.code,{children:"foreach"})]}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"foreach"})," when you want to loop through all items in a collection like an array or a list."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'string[] fruits = { "Apple", "Banana", "Orange" };\n\nforeach (string fruit in fruits)\n{\n    Console.WriteLine($"I like {fruit}");\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,r.jsx)(n.strong,{children:"Question for students"}),(0,r.jsx)(n.br,{}),"\n","Can you replace the ",(0,r.jsx)(n.code,{children:"foreach"})," loop above with a ",(0,r.jsx)(n.code,{children:"for"})," loop?"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,r.jsx)(n.strong,{children:"Practice"}),(0,r.jsx)(n.br,{}),"\n","Write a program that loops through an array of your 5 favorite movies (or songs) and prints each one to the console using ",(0,r.jsx)(n.code,{children:"foreach"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"-summary",children:"\u2705 Summary"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Variables are containers for data in memory"}),"\n",(0,r.jsx)(n.li,{children:"Data types define the kind of data a variable can store"}),"\n",(0,r.jsx)(n.li,{children:"Conditionals let you branch your logic based on values"}),"\n",(0,r.jsx)(n.li,{children:"Loops let you run code multiple times"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"These are the building blocks of every C# program."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udce2 ",(0,r.jsx)(n.a,{href:"https://github.com/sohilww/DotNet-From-Zero-by-Soheil-Karami",children:"Github Repository"}),(0,r.jsx)(n.br,{}),"\n","\ud83d\udce2 ",(0,r.jsx)(n.a,{href:"https://t.me/DotNetFromZeroBySoheilKarami",children:"Official Telegram Channel"}),(0,r.jsx)(n.br,{}),"\n","\ud83d\udcf8 ",(0,r.jsx)(n.a,{href:"https://www.instagram.com/soheilkarami92/",children:"Instagram"}),(0,r.jsx)(n.br,{}),"\n","\ud83d\udd17 ",(0,r.jsx)(n.a,{href:"https://www.linkedin.com/in/soheilkarami/",children:"LinkedIn"})]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);