"use strict";(self.webpackChunkdot_net_from_zero_by_soheil_karami=self.webpackChunkdot_net_from_zero_by_soheil_karami||[]).push([[836],{2674:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Contents/Session 1/Functions-parameters-return-values/Functions-parameters-return-values","title":"Functions, Parameters, and Return Values","description":"Functions (also called methods) allow you to reuse logic and organize your code into meaningful blocks.","source":"@site/docs/Contents/Session 1/03-Functions-parameters-return-values/01-Functions-parameters-return-values.md","sourceDirName":"Contents/Session 1/03-Functions-parameters-return-values","slug":"/Contents/Session 1/Functions-parameters-return-values/Functions-parameters-return-values","permalink":"/DotNet-From-Zero-by-Soheil-Karami/docs/Contents/Session 1/Functions-parameters-return-values/Functions-parameters-return-values","draft":false,"unlisted":false,"editUrl":"https://github.com/sohilww/DotNet-From-Zero-by-Soheil-Karami/docs/Contents/Session 1/03-Functions-parameters-return-values/01-Functions-parameters-return-values.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"Functions, Parameters, and Return Values","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"for vs foreach","permalink":"/DotNet-From-Zero-by-Soheil-Karami/docs/Contents/Session 1/Conditionals-and-Loops/for-vs-foreach"},"next":{"title":"Full Course Outline","permalink":"/DotNet-From-Zero-by-Soheil-Karami/docs/Inofrmation/course-outline"}}');var i=s(4848),t=s(8453);const l={title:"Functions, Parameters, and Return Values",sidebar_position:6},o="\ud83e\udde9 Functions in C#",a={},c=[{value:"\ud83d\udd27 Syntax Overview",id:"-syntax-overview",level:2},{value:"\ud83d\udcd8 Example 1: Simple Greeting Function",id:"-example-1-simple-greeting-function",level:2},{value:"\ud83d\udcd7 Example 2: Function with Parameters",id:"-example-2-function-with-parameters",level:3},{value:"\ud83d\udcd7 Example 3: Function with Return Value",id:"-example-3-function-with-return-value",level:3},{value:"\ud83d\udcd7 Example 4: Using Return in Conditionals",id:"-example-4-using-return-in-conditionals",level:3},{value:"\ud83e\uddfc Clean Code Practices for Functions",id:"-clean-code-practices-for-functions",level:2},{value:"\u2705 1. Function Names Should Be Clear and Descriptive",id:"-1-function-names-should-be-clear-and-descriptive",level:3},{value:"\u2705 2. Keep Functions Small",id:"-2-keep-functions-small",level:3},{value:"\u2705 3. Avoid Long Parameter Lists",id:"-3-avoid-long-parameter-lists",level:3},{value:"\u2705 4. Prefer Return Values Over Console Outputs",id:"-4-prefer-return-values-over-console-outputs",level:3},{value:"\u2705 5. Avoid Side Effects",id:"-5-avoid-side-effects",level:3},{value:"\u2705 6. Stay at One Level of Abstraction",id:"-6-stay-at-one-level-of-abstraction",level:3}];function d(e){const n={blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"-functions-in-c",children:"\ud83e\udde9 Functions in C#"})}),"\n",(0,i.jsxs)(n.p,{children:["Functions (also called ",(0,i.jsx)(n.strong,{children:"methods"}),") allow you to reuse logic and organize your code into meaningful blocks.",(0,i.jsx)(n.br,{}),"\n","Instead of writing the same code again and again, you write a function once and call it whenever needed."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-syntax-overview",children:"\ud83d\udd27 Syntax Overview"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"returnType FunctionName(parameters)\n{\n    // code to execute\n    return value; // optional if returnType is void\n}\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"returnType"})," defines what the function gives back"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"parameters"})," are inputs (can be none, one, or many)"]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"void"})," if the function returns nothing"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-example-1-simple-greeting-function",children:"\ud83d\udcd8 Example 1: Simple Greeting Function"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'void SayHello()\n{\n    Console.WriteLine("Hello, world!");\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"To run this function, use:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"SayHello();\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,i.jsx)(n.strong,{children:"Question for students"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["What happens if we call ",(0,i.jsx)(n.code,{children:"SayHello();"})," inside a ",(0,i.jsx)(n.code,{children:"for"})," loop?"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,i.jsx)(n.strong,{children:"Practice"}),(0,i.jsx)(n.br,{}),"\n","Write a function that:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Prints your name"}),"\n",(0,i.jsx)(n.li,{children:"Call it 3 times using a loop"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-example-2-function-with-parameters",children:"\ud83d\udcd7 Example 2: Function with Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["Functions can receive values (called ",(0,i.jsx)(n.strong,{children:"parameters"}),") from the caller:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'void GreetUser(string name)\n{\n    Console.WriteLine($"Hello, {name}!");\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Usage:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'GreetUser("Ali");\nGreetUser("Sara");\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,i.jsx)(n.strong,{children:"Question for students"}),(0,i.jsx)(n.br,{}),"\n","What happens if you call GreetUser(); without passing any value?"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,i.jsx)(n.strong,{children:"Practice"}),(0,i.jsx)(n.br,{}),"\n","Write a function called ",(0,i.jsx)(n.code,{children:"DescribePet"})," that:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Takes two parameters: ",(0,i.jsx)(n.code,{children:"string name"})," and ",(0,i.jsx)(n.code,{children:"string type"})]}),"\n",(0,i.jsxs)(n.li,{children:["Prints something like ",(0,i.jsx)(n.code,{children:"\"My pet's name is Holo and it's a bird.\""})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"-example-3-function-with-return-value",children:"\ud83d\udcd7 Example 3: Function with Return Value"}),"\n",(0,i.jsxs)(n.p,{children:["You can make functions that return something using ",(0,i.jsx)(n.code,{children:"return"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"int Add(int a, int b)\n{\n    return a + b;\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Usage:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'int sum = Add(5, 7);\nConsole.WriteLine($"Sum is: {sum}");\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,i.jsx)(n.strong,{children:"Question for students"}),(0,i.jsx)(n.br,{}),"\n","Can a function return a value and still print something to the console?"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,i.jsx)(n.strong,{children:"Practice"}),(0,i.jsx)(n.br,{}),"\n","Write a function called ",(0,i.jsx)(n.code,{children:"Square"})," that:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Takes an ",(0,i.jsx)(n.code,{children:"int"})," as input"]}),"\n",(0,i.jsxs)(n.li,{children:["Returns its ",(0,i.jsx)(n.code,{children:"square (x * x)"})]}),"\n",(0,i.jsx)(n.li,{children:"Print the result for 3 different numbers"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"-example-4-using-return-in-conditionals",children:"\ud83d\udcd7 Example 4: Using Return in Conditionals"}),"\n",(0,i.jsxs)(n.p,{children:["You can return early from a function using ",(0,i.jsx)(n.code,{children:"return"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'void CheckAge(int age)\n{\n    if (age < 18)\n    {\n        Console.WriteLine("Access denied.");\n        return;\n    }\n\n    Console.WriteLine("Access granted.");\n}\n\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,i.jsx)(n.strong,{children:"Question for students"}),(0,i.jsx)(n.br,{}),"\n","What happens if we remove the return keyword and add more code after the condition?"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,i.jsx)(n.strong,{children:"Practice"}),(0,i.jsx)(n.br,{}),"\n","Write a function ",(0,i.jsx)(n.code,{children:"CheckPassword"})," that:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Takes a ",(0,i.jsx)(n.code,{children:"string password"})]}),"\n",(0,i.jsxs)(n.li,{children:["If it's ",(0,i.jsx)(n.code,{children:'"1234"'}),", print ",(0,i.jsx)(n.code,{children:'"Welcome!"'})]}),"\n",(0,i.jsxs)(n.li,{children:["Otherwise, print ",(0,i.jsx)(n.code,{children:'"Incorrect password"'})," and return early"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-clean-code-practices-for-functions",children:"\ud83e\uddfc Clean Code Practices for Functions"}),"\n",(0,i.jsxs)(n.p,{children:["Writing clean and readable functions is a key part of being a professional developer.",(0,i.jsx)(n.br,{}),"\n","Here are some best practices to follow when writing methods in C#:"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-1-function-names-should-be-clear-and-descriptive",children:"\u2705 1. Function Names Should Be Clear and Descriptive"}),"\n",(0,i.jsx)(n.p,{children:"Bad:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"void DoIt() { }\n"})}),"\n",(0,i.jsx)(n.p,{children:"Good:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"\nvoid SendInvoiceToCustomer() { }\n\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["\ud83d\udccc Use verbs for functions (",(0,i.jsx)(n.code,{children:"PrintReport"}),", ",(0,i.jsx)(n.code,{children:"CalculateSalary"}),", ",(0,i.jsx)(n.code,{children:"SendEmail"}),")"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"-2-keep-functions-small",children:"\u2705 2. Keep Functions Small"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["A function should do ",(0,i.jsx)(n.strong,{children:"only one thing"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"If you need a comment to explain a block inside a method \u2014 extract that block into a separate function"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"-3-avoid-long-parameter-lists",children:"\u2705 3. Avoid Long Parameter Lists"}),"\n",(0,i.jsx)(n.p,{children:"Bad:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"void RegisterUser(string name, string email, string phone, string address, string password, int age)  { }\n"})}),"\n",(0,i.jsx)(n.p,{children:"Good:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Group related values into objects (UserInfo)"}),"\n",(0,i.jsx)(n.li,{children:"Use fewer than 4 parameters if possible"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"-4-prefer-return-values-over-console-outputs",children:"\u2705 4. Prefer Return Values Over Console Outputs"}),"\n",(0,i.jsx)(n.p,{children:"Functions should return values, not always Console.WriteLine inside:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"int GetDiscount(int age)\n{\n    if (age >= 60)\n        return 10;\n    return 0;\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Let the caller decide how to display or use the result."}),"\n",(0,i.jsx)(n.h3,{id:"-5-avoid-side-effects",children:"\u2705 5. Avoid Side Effects"}),"\n",(0,i.jsx)(n.p,{children:"Functions should not change global state or variables unless absolutely necessary."}),"\n",(0,i.jsx)(n.p,{children:"Bad:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"int counter = 0;\n\nvoid DoSomething()\n{\n    counter++; // \u274c unexpected side effect\n}\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,i.jsx)(n.strong,{children:"Question for students"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Which of these clean code rules have we accidentally broken before?"}),"\n",(0,i.jsx)(n.li,{children:"Can you refactor one of your previous functions to be cleaner?"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,i.jsx)(n.strong,{children:"Practice"}),(0,i.jsx)(n.br,{}),"\n","Refactor the following function using clean code principles:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'void A(string n, int a, string e)\n{\n    Console.WriteLine("Name: " + n + ", Age: " + a + ", Email: " + e);\n}\n\n'})}),"\n",(0,i.jsx)(n.p,{children:"Hints:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Rename the method"}),"\n",(0,i.jsx)(n.li,{children:"Reduce parameters"}),"\n",(0,i.jsx)(n.li,{children:"Return a formatted string instead of printing it"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-6-stay-at-one-level-of-abstraction",children:"\u2705 6. Stay at One Level of Abstraction"}),"\n",(0,i.jsxs)(n.p,{children:["A function should operate at ",(0,i.jsx)(n.strong,{children:"a single level of abstraction"}),".",(0,i.jsx)(n.br,{}),"\n","Mixing high-level ideas with low-level implementation details makes the code harder to read and maintain."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["\ud83e\uddf5 ",(0,i.jsx)(n.strong,{children:"Bad Example: Mixed Abstractions"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'void ProcessOrder()\n{\n    Console.WriteLine("Processing...");\n\n    // Connect to database\n    SqlConnection conn = new SqlConnection("connection_string");\n    conn.Open();\n\n    // Insert order\n    SqlCommand cmd = new SqlCommand("INSERT INTO Orders ...", conn);\n    cmd.ExecuteNonQuery();\n\n    Console.WriteLine("Done!");\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"In this example, the method mixes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["High-level logic: ",(0,i.jsx)(n.code,{children:'"ProcessOrder"'})]}),"\n",(0,i.jsx)(n.li,{children:"Low-level implementation: DB connection and SQL command"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\ud83e\ude84 ",(0,i.jsx)(n.strong,{children:"Better: One Level per Function"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'void ProcessOrder()\n{\n    Console.WriteLine("Processing...");\n    SaveOrderToDatabase();\n    Console.WriteLine("Done!");\n}\n\nvoid SaveOrderToDatabase()\n{\n    using var conn = new SqlConnection("connection_string");\n    conn.Open();\n\n    var cmd = new SqlCommand("INSERT INTO Orders ...", conn);\n    cmd.ExecuteNonQuery();\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Now:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ProcessOrder()"})," talks at a high level"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SaveOrderToDatabase()"})," handles the low-level details"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,i.jsx)(n.strong,{children:"Question for students"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Do you have any questions about this principle? Let\u2019s discuss them together."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,i.jsx)(n.strong,{children:"Practice"}),(0,i.jsx)(n.br,{}),"\n","Refactor this function to separate concerns and stay at one level of abstraction:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'void SendWelcomeEmail(string email)\n{\n    Console.WriteLine("Preparing email...");\n\n    string subject = "Welcome!";\n    string body = "Thanks for signing up.";\n    SmtpClient client = new SmtpClient("smtp.server.com");\n    client.Send(email, subject, body);\n\n    Console.WriteLine("Email sent.");\n}\n\n'})}),"\n",(0,i.jsx)(n.p,{children:"Hint:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Split it into 2 or more focused methods."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var r=s(6540);const i={},t=r.createContext(i);function l(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);