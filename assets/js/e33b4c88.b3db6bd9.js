"use strict";(self.webpackChunkdot_net_from_zero_by_soheil_karami=self.webpackChunkdot_net_from_zero_by_soheil_karami||[]).push([[7843],{647:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"Contents/Session1/Variables-types/Variables-types","title":"Variables, Types","description":"Understanding variables, data types, conditionals, and loops is essential in any programming language.","source":"@site/docs/Contents/Session1/01-Variables-types/02-Variables-types.md","sourceDirName":"Contents/Session1/01-Variables-types","slug":"/Contents/Session1/Variables-types/Variables-types","permalink":"/DotNet-From-Zero-by-Soheil-Karami/docs/Contents/Session1/Variables-types/Variables-types","draft":false,"unlisted":false,"editUrl":"https://github.com/sohilww/DotNet-From-Zero-by-Soheil-Karami/blob/main/docs/Contents/Session1/01-Variables-types/02-Variables-types.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started with C# and .NET","permalink":"/DotNet-From-Zero-by-Soheil-Karami/docs/Contents/Session1/Variables-types/Csharp-language-and-NET-ecosystem"},"next":{"title":"Type Casting and Conversion","permalink":"/DotNet-From-Zero-by-Soheil-Karami/docs/Contents/Session1/Variables-types/Type-Casting-and-Conversion-"}}');var r=s(4848),t=s(8453);const d={},l="Variables, Types",c={},a=[{value:"\ud83d\udd0d Dynamically Typed Languages \u2014 Explained",id:"-dynamically-typed-languages--explained",level:2},{value:"\ud83d\udd38 Example (Python):",id:"-example-python",level:3},{value:"\u2705 Pros of Dynamic Typing:",id:"-pros-of-dynamic-typing",level:2},{value:"\u274c Cons of Dynamic Typing:",id:"-cons-of-dynamic-typing",level:2},{value:"\ud83d\udcac Quick Comparison",id:"-quick-comparison",level:2},{value:"\ud83d\udd39 Variables in C#",id:"-variables-in-c",level:2},{value:"\ud83d\udd39 Common Data Types",id:"-common-data-types",level:2},{value:"\ud83d\udd39 Other Important Data Types",id:"-other-important-data-types",level:2}];function o(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"variables-types",children:"Variables, Types"})}),"\n",(0,r.jsxs)(n.p,{children:["Understanding variables, data types, conditionals, and loops is essential in any programming language.",(0,r.jsx)(n.br,{}),"\n","In this article, we\u2019ll explore these core C# concepts in depth, using clear explanations, examples, and interactive questions designed for classroom discussion."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h1,{id:"-static-vs-dynamic-typing-in-programming-languages",children:"\ud83e\udde0 Static vs Dynamic Typing in Programming Languages"}),"\n",(0,r.jsxs)(n.p,{children:["C# is a ",(0,r.jsx)(n.strong,{children:"statically typed language"}),", meaning you must declare the type of every variable at the time of its definition."]}),"\n",(0,r.jsx)(n.p,{children:"This means the compiler knows the type of each variable at compile time, which helps catch errors early and improves performance."}),"\n",(0,r.jsx)(n.p,{children:"For example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'int age = 30;\nstring city = "London";\n'})}),"\n",(0,r.jsxs)(n.p,{children:["In contrast, ",(0,r.jsx)(n.strong,{children:"dynamically typed languages"})," like Python or JavaScript determine the type of a variable at runtime."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-dynamically-typed-languages--explained",children:"\ud83d\udd0d Dynamically Typed Languages \u2014 Explained"}),"\n",(0,r.jsxs)(n.p,{children:["In ",(0,r.jsx)(n.strong,{children:"dynamically typed languages"}),", you don't have to declare the type of a variable when you create it.",(0,r.jsx)(n.br,{}),"\n","The language interpreter determines the type ",(0,r.jsx)(n.strong,{children:"at runtime"}),", based on the value assigned."]}),"\n",(0,r.jsx)(n.h3,{id:"-example-python",children:"\ud83d\udd38 Example (Python):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'x = 10       # x is an integer\nx = "hello"  # now x is a string\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Here, the same variable ",(0,r.jsx)(n.code,{children:"x"})," can hold values of different types at different times, because Python decides the type dynamically."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-pros-of-dynamic-typing",children:"\u2705 Pros of Dynamic Typing:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Faster to write"}),": You don\u2019t need to think about or declare types upfront."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"More flexible"}),": One variable can hold different types at different times."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Concise code"}),": Less boilerplate, useful in scripting or rapid prototyping."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-cons-of-dynamic-typing",children:"\u274c Cons of Dynamic Typing:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"More prone to runtime errors"}),": Type-related bugs are often only caught when the program runs."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Harder to refactor"}),": Without knowing types in advance, refactoring large codebases can be risky."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tooling limitations"}),": IDEs and code editors have less context to provide autocomplete or error detection."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-quick-comparison",children:"\ud83d\udcac Quick Comparison"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Feature"}),(0,r.jsx)(n.th,{children:"Statically Typed (e.g. C#)"}),(0,r.jsx)(n.th,{children:"Dynamically Typed (e.g. Python)"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Type known at..."}),(0,r.jsx)(n.td,{children:"Compile time"}),(0,r.jsx)(n.td,{children:"Runtime"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Type declaration"}),(0,r.jsx)(n.td,{children:"Required"}),(0,r.jsx)(n.td,{children:"Not required"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Flexibility"}),(0,r.jsx)(n.td,{children:"Less flexible"}),(0,r.jsx)(n.td,{children:"More flexible"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Error detection"}),(0,r.jsx)(n.td,{children:"Early (compile time)"}),(0,r.jsx)(n.td,{children:"Late (runtime)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Performance"}),(0,r.jsx)(n.td,{children:"Generally faster at runtime"}),(0,r.jsx)(n.td,{children:"May be slower due to type checks"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,r.jsx)(n.strong,{children:"Practice"}),(0,r.jsx)(n.br,{}),"\n","Can you think of a situation where dynamic typing would be helpful? And one where it could cause trouble?"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-variables-in-c",children:"\ud83d\udd39 Variables in C#"}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.strong,{children:"variable"})," is like a container that holds a value in memory. Every variable must have a ",(0,r.jsx)(n.strong,{children:"type"})," in C#, which defines what kind of data it can store."]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,r.jsx)(n.strong,{children:"Practice"}),(0,r.jsx)(n.br,{}),"\n","What is memory in a computer program? Why is it important when working with variables?"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["C# is a ",(0,r.jsx)(n.strong,{children:"statically typed language"}),", meaning you must declare the type of every variable at the time of its definition."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'int age = 25;\nstring name = "Soheil";\nbool isActive = true;\ndouble temperature = 36.6;\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,r.jsx)(n.strong,{children:"Question for students"}),(0,r.jsx)(n.br,{}),"\n","What happens if you try to assign a string value to a variable declared as an ",(0,r.jsx)(n.code,{children:"int"}),"?"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-common-data-types",children:"\ud83d\udd39 Common Data Types"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Example"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"int"})}),(0,r.jsx)(n.td,{children:"Integer numbers"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"int count = 10;"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Text / sequence of characters"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'string name = "Ali";'})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bool"})}),(0,r.jsx)(n.td,{children:"Boolean value: true or false"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bool isLoggedIn = false;"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"double"})}),(0,r.jsx)(n.td,{children:"Floating-point with high precision"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"double pi = 3.14159;"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"char"})}),(0,r.jsx)(n.td,{children:"A single Unicode character"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"char initial = 'A';"})})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,r.jsx)(n.strong,{children:"Practice"}),(0,r.jsx)(n.br,{}),"\n","Define three variables: a student's age, their first name, and whether they passed the exam."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-other-important-data-types",children:"\ud83d\udd39 Other Important Data Types"}),"\n",(0,r.jsx)(n.p,{children:"C# supports many more useful types:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Example"}),(0,r.jsx)(n.th,{children:"Size"}),(0,r.jsx)(n.th,{children:"Range"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bool"})}),(0,r.jsx)(n.td,{children:"Boolean true/false value"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bool isReady = true;"})}),(0,r.jsx)(n.td,{children:"1 byte"}),(0,r.jsx)(n.td,{children:"true / false"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"byte"})}),(0,r.jsx)(n.td,{children:"Unsigned 8-bit integer"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"byte level = 255;"})}),(0,r.jsx)(n.td,{children:"1 byte"}),(0,r.jsx)(n.td,{children:"0 to 255"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sbyte"})}),(0,r.jsx)(n.td,{children:"Signed 8-bit integer"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sbyte offset = -128;"})}),(0,r.jsx)(n.td,{children:"1 byte"}),(0,r.jsx)(n.td,{children:"-128 to 127"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"short"})}),(0,r.jsx)(n.td,{children:"Signed 16-bit integer"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"short temp = -32000;"})}),(0,r.jsx)(n.td,{children:"2 bytes"}),(0,r.jsx)(n.td,{children:"-32,768 to 32,767"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ushort"})}),(0,r.jsx)(n.td,{children:"Unsigned 16-bit integer"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ushort u = 65000;"})}),(0,r.jsx)(n.td,{children:"2 bytes"}),(0,r.jsx)(n.td,{children:"0 to 65,535"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"int"})}),(0,r.jsx)(n.td,{children:"Signed 32-bit integer"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"int age = 30;"})}),(0,r.jsx)(n.td,{children:"4 bytes"}),(0,r.jsx)(n.td,{children:"-2,147,483,648 to 2,147,483,647"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint"})}),(0,r.jsx)(n.td,{children:"Unsigned 32-bit integer"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uint count = 3000000000;"})}),(0,r.jsx)(n.td,{children:"4 bytes"}),(0,r.jsx)(n.td,{children:"0 to 4,294,967,295"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"long"})}),(0,r.jsx)(n.td,{children:"Signed 64-bit integer"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"long stars = 9000000000000000000;"})}),(0,r.jsx)(n.td,{children:"8 bytes"}),(0,r.jsx)(n.td,{children:"-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ulong"})}),(0,r.jsx)(n.td,{children:"Unsigned 64-bit integer"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ulong uStars = 18000000000000000000;"})}),(0,r.jsx)(n.td,{children:"8 bytes"}),(0,r.jsx)(n.td,{children:"0 to 18,446,744,073,709,551,615"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"float"})}),(0,r.jsx)(n.td,{children:"Single-precision floating-point number"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"float price = 19.99f;"})}),(0,r.jsx)(n.td,{children:"4 bytes"}),(0,r.jsx)(n.td,{children:"\xb11.5 \xd7 10\u207b\u2074\u2075 to \xb13.4 \xd7 10\xb3\u2078"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"double"})}),(0,r.jsx)(n.td,{children:"Double-precision floating-point number"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"double pi = 3.14159;"})}),(0,r.jsx)(n.td,{children:"8 bytes"}),(0,r.jsx)(n.td,{children:"\xb15.0 \xd7 10\u207b\xb3\xb2\u2074 to \xb11.7 \xd7 10\xb3\u2070\u2078"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"decimal"})}),(0,r.jsx)(n.td,{children:"High-precision decimal (ideal for currency)"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"decimal salary = 5000.75m;"})}),(0,r.jsx)(n.td,{children:"16 bytes"}),(0,r.jsx)(n.td,{children:"\xb11.0 \xd7 10\u207b\xb2\u2078 to \xb17.9 \xd7 10\xb2\u2078"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"char"})}),(0,r.jsx)(n.td,{children:"Single 16-bit Unicode character"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"char letter = 'A';"})}),(0,r.jsx)(n.td,{children:"2 bytes"}),(0,r.jsx)(n.td,{children:"U+0000 to U+FFFF"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Sequence of characters"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'string name = "Ali";'})}),(0,r.jsx)(n.td,{children:"Varies"}),(0,r.jsx)(n.td,{children:"Up to 2 billion characters"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"DateTime"})}),(0,r.jsx)(n.td,{children:"Date and time values"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"DateTime now = DateTime.Now;"})}),(0,r.jsx)(n.td,{children:"8 bytes"}),(0,r.jsx)(n.td,{children:"01/01/0001 to 12/31/9999"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"object"})}),(0,r.jsx)(n.td,{children:"Base type of all types in C#"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"object anything = 42;"})}),(0,r.jsx)(n.td,{children:"Reference"}),(0,r.jsx)(n.td,{children:"Can store any type"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"var"})}),(0,r.jsx)(n.td,{children:"Type inferred from the value"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"var score = 88;"})}),(0,r.jsx)(n.td,{children:"Inferred"}),(0,r.jsx)(n.td,{children:"Same as inferred type"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udca1 ",(0,r.jsx)(n.strong,{children:"Tip"}),": Always choose the most specific type for clarity and performance. Avoid ",(0,r.jsx)(n.code,{children:"var"})," unless the type is obvious from the context."]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,r.jsx)(n.strong,{children:"Question for students"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Why do we need both ",(0,r.jsx)(n.code,{children:"float"})," and ",(0,r.jsx)(n.code,{children:"decimal"})," in C#? Which one would you choose for storing money?"]}),"\n",(0,r.jsx)(n.li,{children:"What do you think are the most important things to consider when working with variables?"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,r.jsx)(n.strong,{children:"Practice"})]}),"\n",(0,r.jsx)(n.p,{children:"Write code to declare the following:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.code,{children:"decimal"})," variable for a product price"]}),"\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.code,{children:"DateTime"})," variable for today's date"]}),"\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.code,{children:"var"})," variable for your favorite number"]}),"\n",(0,r.jsx)(n.li,{children:"Print all three variables to the console."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>l});var i=s(6540);const r={},t=i.createContext(r);function d(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);