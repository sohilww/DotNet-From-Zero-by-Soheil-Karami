"use strict";(self.webpackChunkdot_net_from_zero_by_soheil_karami=self.webpackChunkdot_net_from_zero_by_soheil_karami||[]).push([[3674],{1111:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"Contents/Session1/Classes-constructors-properties-inheritance/Struct-vs-Class","title":"Struct vs Class","description":"\ud83d\udd39 What is a struct?","source":"@site/docs/Contents/Session1/04-Classes-constructors-properties-inheritance/10-Struct-vs-Class.md","sourceDirName":"Contents/Session1/04-Classes-constructors-properties-inheritance","slug":"/Contents/Session1/Classes-constructors-properties-inheritance/Struct-vs-Class","permalink":"/DotNet-From-Zero-by-Soheil-Karami/docs/Contents/Session1/Classes-constructors-properties-inheritance/Struct-vs-Class","draft":false,"unlisted":false,"editUrl":"https://github.com/sohilww/DotNet-From-Zero-by-Soheil-Karami/blob/main/docs/docs/Contents/Session1/04-Classes-constructors-properties-inheritance/10-Struct-vs-Class.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"title":"Struct vs Class"},"sidebar":"tutorialSidebar","previous":{"title":"Enums","permalink":"/DotNet-From-Zero-by-Soheil-Karami/docs/Contents/Session1/Classes-constructors-properties-inheritance/Enums copy"},"next":{"title":"Record vs Class vs Struct","permalink":"/DotNet-From-Zero-by-Soheil-Karami/docs/Contents/Session1/Classes-constructors-properties-inheritance/Record-vs-Class-vs-Struct"}}');var t=n(4848),i=n(8453);const c={title:"Struct vs Class"},l="Struct vs Class",o={},a=[{value:"\ud83d\udd39 What is a <code>struct</code>?",id:"-what-is-a-struct",level:2},{value:"\ud83d\udd39 What is a <code>class</code>?",id:"-what-is-a-class",level:2},{value:"\ud83d\udd39 Memory and Behavior Differences",id:"-memory-and-behavior-differences",level:2},{value:"\ud83e\uddf9 Clean Code Tips",id:"-clean-code-tips",level:2}];function d(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"struct-vs-class",children:"Struct vs Class"})}),"\n",(0,t.jsxs)(s.h2,{id:"-what-is-a-struct",children:["\ud83d\udd39 What is a ",(0,t.jsx)(s.code,{children:"struct"}),"?"]}),"\n",(0,t.jsxs)(s.p,{children:["A ",(0,t.jsx)(s.code,{children:"struct"})," is a ",(0,t.jsx)(s.strong,{children:"value type"})," that is commonly used for small, lightweight objects that represent a single value or data structure."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Stored on the ",(0,t.jsx)(s.strong,{children:"stack"})]}),"\n",(0,t.jsx)(s.li,{children:"Copied by value (not reference)"}),"\n",(0,t.jsx)(s.li,{children:"Cannot inherit from other classes or structs"}),"\n",(0,t.jsxs)(s.li,{children:["Useful for performance-critical scenarios (e.g. ",(0,t.jsx)(s.code,{children:"Point"}),", ",(0,t.jsx)(s.code,{children:"DateTime"}),")"]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-csharp",children:"public struct Point\r\n{\r\n    public int X;\r\n    public int Y;\r\n}\n"})}),"\n",(0,t.jsx)(s.p,{children:"Using the struct"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-csharp",children:'Point p1 = new Point { X = 5, Y = 10 };\r\nConsole.WriteLine($"X: {p1.X}, Y: {p1.Y}");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["\ud83d\udfe8 ",(0,t.jsx)(s.strong,{children:"Questions for students"})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["What are typical use cases where you'd prefer a ",(0,t.jsx)(s.code,{children:"struct"})," over a ",(0,t.jsx)(s.code,{children:"class"}),"?"]}),"\n",(0,t.jsx)(s.li,{children:"What happens if you pass a struct to a method and modify its field?"}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["\ud83d\udfe6 ",(0,t.jsx)(s.strong,{children:"Practice"})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Create a ",(0,t.jsx)(s.code,{children:"struct"})," called ",(0,t.jsx)(s.code,{children:"Point"})," with ",(0,t.jsx)(s.code,{children:"X"})," and ",(0,t.jsx)(s.code,{children:"Y"})," fields. Create two points and assign values."]}),"\n",(0,t.jsxs)(s.li,{children:["Pass a ",(0,t.jsx)(s.code,{children:"Point"})," to a method and try to change its values. Print before and after."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.h2,{id:"-what-is-a-class",children:["\ud83d\udd39 What is a ",(0,t.jsx)(s.code,{children:"class"}),"?"]}),"\n",(0,t.jsxs)(s.p,{children:["A ",(0,t.jsx)(s.code,{children:"class"})," is a ",(0,t.jsx)(s.strong,{children:"reference type"})," used to create complex objects and define behavior via methods and properties."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Stored on the ",(0,t.jsx)(s.strong,{children:"heap"})]}),"\n",(0,t.jsx)(s.li,{children:"Passed by reference"}),"\n",(0,t.jsx)(s.li,{children:"Supports inheritance and polymorphism"}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-csharp",children:"public class Person\r\n{\r\n    public string Name;\r\n    public int Age;\r\n}\n"})}),"\n",(0,t.jsxs)(s.p,{children:["\ud83d\udfe8 ",(0,t.jsx)(s.strong,{children:"Questions for students"})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Why are classes more suitable for building application logic?"}),"\n",(0,t.jsx)(s.li,{children:"What happens when you assign a class instance to another variable?"}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["\ud83d\udfe6 ",(0,t.jsx)(s.strong,{children:"Practice"})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Create a class called ",(0,t.jsx)(s.code,{children:"Person"})," with ",(0,t.jsx)(s.code,{children:"Name"})," and ",(0,t.jsx)(s.code,{children:"Age"})," properties. Create two variables and assign one to the other. Modify one and print both."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"-memory-and-behavior-differences",children:"\ud83d\udd39 Memory and Behavior Differences"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Feature"}),(0,t.jsx)(s.th,{children:"Struct"}),(0,t.jsx)(s.th,{children:"Class"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Type"}),(0,t.jsx)(s.td,{children:"Value type"}),(0,t.jsx)(s.td,{children:"Reference type"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Memory location"}),(0,t.jsx)(s.td,{children:"Stack"}),(0,t.jsx)(s.td,{children:"Heap"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Copy behavior"}),(0,t.jsx)(s.td,{children:"By value (independent copy)"}),(0,t.jsx)(s.td,{children:"By reference (shared ref)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Inheritance"}),(0,t.jsx)(s.td,{children:"Not supported"}),(0,t.jsx)(s.td,{children:"Fully supported"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Nullability"}),(0,t.jsx)(s.td,{children:"Cannot be null (unless nullable)"}),(0,t.jsx)(s.td,{children:"Can be null"})]})]})]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-csharp",children:"Point a = new Point { X = 1, Y = 2 };\r\nPoint b = a;\r\nb.X = 99;\r\nConsole.WriteLine(a.X); // Output: 1\r\nConsole.WriteLine(b.X); // Output: 99\n"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-csharp",children:'Person p1 = new Person { Name = "Ali", Age = 25 };\r\nPerson p2 = p1;\r\np2.Age = 40;\r\nConsole.WriteLine(p1.Age); // Output: 40\n'})}),"\n",(0,t.jsxs)(s.p,{children:["\ud83d\udfe8 ",(0,t.jsx)(s.strong,{children:"Questions for students"})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"What\u2019s the difference between modifying a class and a struct inside a method?"}),"\n",(0,t.jsx)(s.li,{children:"When would copying by reference be a better option?"}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["\ud83d\udfe6 ",(0,t.jsx)(s.strong,{children:"Practice"})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Create a method that modifies both a ",(0,t.jsx)(s.code,{children:"Point"})," struct and a ",(0,t.jsx)(s.code,{children:"Person"})," class. Compare the results and explain why they differ."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"-clean-code-tips",children:"\ud83e\uddf9 Clean Code Tips"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Prefer ",(0,t.jsx)(s.code,{children:"struct"})," only when:","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"The object is small and immutable"}),"\n",(0,t.jsx)(s.li,{children:"You don\u2019t need inheritance or complex behavior"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["Avoid large ",(0,t.jsx)(s.code,{children:"structs"})," because copying them is expensive"]}),"\n",(0,t.jsxs)(s.li,{children:["Use ",(0,t.jsx)(s.code,{children:"class"})," when you need shared behavior and object identity"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>l});var r=n(6540);const t={},i=r.createContext(t);function c(e){const s=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);