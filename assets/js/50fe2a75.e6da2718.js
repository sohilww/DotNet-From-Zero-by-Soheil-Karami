"use strict";(self.webpackChunkdot_net_from_zero_by_soheil_karami=self.webpackChunkdot_net_from_zero_by_soheil_karami||[]).push([[4132],{5886:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>l,default:()=>a,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Contents/Session 1/Classes-constructors-properties-inheritance/what-is-OOP","title":"What is OOP","description":"Before we dive into Object-Oriented Programming (OOP),","source":"@site/docs/Contents/Session 1/04-Classes-constructors-properties-inheritance/03-what-is-OOP.md","sourceDirName":"Contents/Session 1/04-Classes-constructors-properties-inheritance","slug":"/Contents/Session 1/Classes-constructors-properties-inheritance/what-is-OOP","permalink":"/DotNet-From-Zero-by-Soheil-Karami/docs/Contents/Session 1/Classes-constructors-properties-inheritance/what-is-OOP","draft":false,"unlisted":false,"editUrl":"https://github.com/sohilww/DotNet-From-Zero-by-Soheil-Karami/docs/Contents/Session 1/04-Classes-constructors-properties-inheritance/03-what-is-OOP.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"What is OOP","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Constructors and Properties","permalink":"/DotNet-From-Zero-by-Soheil-Karami/docs/Contents/Session 1/Classes-constructors-properties-inheritance/Constructors-and-Properties"},"next":{"title":"Inheritance","permalink":"/DotNet-From-Zero-by-Soheil-Karami/docs/Contents/Session 1/Classes-constructors-properties-inheritance/Inheritance"}}');var i=s(4848),t=s(8453);const o={title:"What is OOP",sidebar_position:3},l="\ud83d\udeab What is OOP",h={},c=[{value:"\ud83e\uddf1 Approach: One Class per Tree Type",id:"-approach-one-class-per-tree-type",level:2},{value:"\u26a0\ufe0f The Problem with This Approach",id:"\ufe0f-the-problem-with-this-approach",level:2},{value:"Issues:",id:"issues",level:3},{value:"\ud83d\udcac DRY Principle \u2013 Don\u2019t Repeat Yourself",id:"-dry-principle--dont-repeat-yourself",level:2},{value:"\ud83d\udc47 Let&#39;s look at an example",id:"-lets-look-at-an-example",level:3},{value:"\ud83e\udde0 What is Object-Oriented Programming (OOP)?",id:"-what-is-object-oriented-programming-oop",level:2},{value:"\ud83e\udde9 Key Concepts of OOP",id:"-key-concepts-of-oop",level:3}];function d(e){const n={blockquote:"blockquote",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"-what-is-oop",children:"\ud83d\udeab What is OOP"})}),"\n",(0,i.jsxs)(n.p,{children:["Before we dive into Object-Oriented Programming (OOP),",(0,i.jsx)(n.br,{}),"\n","let\u2019s try building our tree system ",(0,i.jsx)(n.strong,{children:"without using any OOP features"}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-approach-one-class-per-tree-type",children:"\ud83e\uddf1 Approach: One Class per Tree Type"}),"\n",(0,i.jsx)(n.p,{children:"Let\u2019s create a separate class for each type of tree:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"AppleTree \ud83c\udf4e"}),"\n",(0,i.jsx)(n.li,{children:"OliveTree \ud83e\uded2"}),"\n",(0,i.jsx)(n.li,{children:"PineTree \ud83c\udf32"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Each class will have its own:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Height"})," field"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Grow()"})," method"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Photosynthesize()"})," method"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ProduceFruit()"})," method"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["And all these methods will be ",(0,i.jsx)(n.strong,{children:"almost identical"}),", except for a few lines."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'class AppleTree\r\n{\r\n    public int Height = 0;\r\n\r\n    public void Grow()\r\n    {\r\n        Height += 2;\r\n        Console.WriteLine("The Apple tree grew by 2 meters.");\r\n    }\r\n\r\n    public void Photosynthesize()\r\n    {\r\n        Console.WriteLine("tree is photosynthesizing \ud83c\udf1e");\r\n    }\r\n\r\n    public void ProduceFruit()\r\n    {\r\n        Console.WriteLine("Produced delicious apples \ud83c\udf4e");\r\n    }\r\n}\r\nclass OliveTree\r\n{\r\n    public int Height = 0;\r\n\r\n    public void Grow()\r\n    {\r\n        Height += 1;\r\n        Console.WriteLine("The Olive tree grew by 1 meter.");\r\n    }\r\n\r\n    public void Photosynthesize()\r\n    {\r\n        Console.WriteLine("tree is photosynthesizing \ud83c\udf1e");\r\n    }\r\n\r\n    public void ProduceFruit()\r\n    {\r\n        Console.WriteLine("Produced rich olives \ud83e\uded2");\r\n    }\r\n}\r\nclass PineTree\r\n{\r\n    public int Height = 0;\r\n\r\n    public void Grow()\r\n    {\r\n        Height += 3;\r\n        Console.WriteLine("The Pine tree grew by 3 meters.");\r\n    }\r\n\r\n    public void Photosynthesize()\r\n    {\r\n        Console.WriteLine("tree is photosynthesizing \ud83c\udf1e");\r\n    }\r\n\r\n    public void ProduceFruit()\r\n    {\r\n        Console.WriteLine("Produced pine cones \ud83c\udf32");\r\n    }\r\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"\ufe0f-the-problem-with-this-approach",children:"\u26a0\ufe0f The Problem with This Approach"}),"\n",(0,i.jsxs)(n.p,{children:["This kind of code looks okay when you only have 2 or 3 types.",(0,i.jsx)(n.br,{}),"\n","But imagine you want to support ",(0,i.jsx)(n.strong,{children:"20 types of trees"})," in the future..."]}),"\n",(0,i.jsx)(n.h3,{id:"issues",children:"Issues:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["\ud83d\udd01 ",(0,i.jsx)(n.strong,{children:"Code Duplication"}),(0,i.jsx)(n.br,{}),"\n","Every tree class repeats the same logic: growing, photosynthesizing, etc."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["\ud83d\udc1e ",(0,i.jsx)(n.strong,{children:"Error-Prone"}),(0,i.jsx)(n.br,{}),"\n","If you need to fix a bug in the ",(0,i.jsx)(n.code,{children:"Grow()"})," method, you have to fix it in ",(0,i.jsx)(n.strong,{children:"every class"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["\ud83d\udeab ",(0,i.jsx)(n.strong,{children:"Hard to Extend"}),(0,i.jsx)(n.br,{}),"\n","What if you want to log every time a tree photosynthesizes? You\u2019ll need to change ",(0,i.jsx)(n.strong,{children:"every file"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["\ud83e\udde9 ",(0,i.jsx)(n.strong,{children:"No Shared Structure"}),(0,i.jsx)(n.br,{}),"\n","All trees are similar, but the code doesn't express this. There is ",(0,i.jsx)(n.strong,{children:"no connection"})," between them."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,i.jsx)(n.strong,{children:"Question for students"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["What if you wanted to change how trees grow?",(0,i.jsx)(n.br,{}),"\n","Can you update that logic in one place? Or do you need to repeat it everywhere?"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Can you think of a better way to avoid duplicating ",(0,i.jsx)(n.code,{children:"Photosynthesize()"})," logic?"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,i.jsx)(n.strong,{children:"Practice"})]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Add a new class called ",(0,i.jsx)(n.code,{children:"CherryTree"})]}),"\n",(0,i.jsx)(n.li,{children:"Copy all code from one of the existing classes"}),"\n",(0,i.jsx)(n.li,{children:"Change only the fruit type"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Then imagine this:",(0,i.jsx)(n.br,{}),"\n","A new requirement says ",(0,i.jsx)(n.em,{children:'"Every tree must log the date when it grows."'}),(0,i.jsx)(n.br,{}),"\n","Now you have to open 4 files and update all ",(0,i.jsx)(n.code,{children:"Grow()"})," methods manually.",(0,i.jsx)(n.br,{}),"\n","Is that scalable?"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-dry-principle--dont-repeat-yourself",children:"\ud83d\udcac DRY Principle \u2013 Don\u2019t Repeat Yourself"}),"\n",(0,i.jsx)(n.p,{children:"One of the most important principles in clean code is:"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DRY"})," \u2013 Don\u2019t Repeat Yourself"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["It means that ",(0,i.jsx)(n.strong,{children:"every piece of knowledge or logic"})," should exist ",(0,i.jsx)(n.strong,{children:"in exactly one place"})," in your code."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-lets-look-at-an-example",children:"\ud83d\udc47 Let's look at an example"}),"\n",(0,i.jsxs)(n.p,{children:["Each of our ",(0,i.jsx)(n.code,{children:"Tree"})," classes has the exact same method for photosynthesis:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'public void Photosynthesize()\r\n{\r\n    Console.WriteLine("tree is photosynthesizing \ud83c\udf1e");\r\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Now imagine we want to change the message \u2014 maybe log it differently, or include the tree type."}),"\n",(0,i.jsx)(n.p,{children:"We\u2019d need to change it in every single class \u2014 \u274c that\u2019s duplication."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,i.jsx)(n.strong,{children:"Question for students"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Why is code duplication dangerous?"}),"\n",(0,i.jsx)(n.li,{children:"Can you think of a real project where repeating logic caused bugs or inconsistencies?"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["That's why we need a better approach \u2014 one that lets us ",(0,i.jsx)(n.strong,{children:"reuse shared logic"}),", ",(0,i.jsx)(n.strong,{children:"avoid duplication"}),", and ",(0,i.jsx)(n.strong,{children:"model real-world relationships"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["This is exactly what ",(0,i.jsx)(n.strong,{children:"Object-Oriented Programming (OOP)"})," is designed for."]}),"\n",(0,i.jsx)(n.p,{children:"Let\u2019s take a step back and understand what OOP really is."}),"\n",(0,i.jsx)(n.h2,{id:"-what-is-object-oriented-programming-oop",children:"\ud83e\udde0 What is Object-Oriented Programming (OOP)?"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"OOP"})," is a programming paradigm that organizes code around ",(0,i.jsx)(n.strong,{children:"objects"}),", which bundle together ",(0,i.jsx)(n.strong,{children:"data"})," and ",(0,i.jsx)(n.strong,{children:"behavior"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Instead of scattering logic across multiple places, OOP helps you:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Group related things together (like a tree and its behaviors)"}),"\n",(0,i.jsx)(n.li,{children:"Reuse shared logic in a clean and safe way"}),"\n",(0,i.jsx)(n.li,{children:"Extend functionality without duplicating code"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-key-concepts-of-oop",children:"\ud83e\udde9 Key Concepts of OOP"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Concept"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Class"})}),(0,i.jsx)(n.td,{children:"A blueprint for creating similar objects (e.g. Tree)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Object"})}),(0,i.jsx)(n.td,{children:"An instance of a class with actual data (e.g. appleTree)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Inheritance"})}),(0,i.jsx)(n.td,{children:"Allows a class to inherit behavior and fields from another"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Polymorphism"})}),(0,i.jsx)(n.td,{children:"Allows different objects to respond differently to the same method"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Encapsulation"})}),(0,i.jsx)(n.td,{children:"Keeps internal data safe and exposes only what\u2019s necessary"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Abstraction"})}),(0,i.jsx)(n.td,{children:"Hides irrelevant details and shows only what\u2019s essential"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,i.jsx)(n.strong,{children:"Question for students"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Why might OOP help us scale better than copy-pasting code?"}),"\n",(0,i.jsx)(n.li,{children:"Which part of your real life could be modeled as an object?"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,i.jsx)(n.strong,{children:"Practice"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Think about how our ",(0,i.jsx)(n.code,{children:"Tree"})," example can benefit from being written in OOP style."]}),"\n",(0,i.jsx)(n.li,{children:"What behaviors are shared?"}),"\n",(0,i.jsx)(n.li,{children:"What parts are unique to each tree?"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["In the next section, we\u2019ll start applying these OOP principles to improve our tree classes \u2014 starting with ",(0,i.jsx)(n.strong,{children:"Inheritance"}),"."]})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var r=s(6540);const i={},t=r.createContext(i);function o(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);