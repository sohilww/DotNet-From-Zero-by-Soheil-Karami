"use strict";(self.webpackChunkdot_net_from_zero_by_soheil_karami=self.webpackChunkdot_net_from_zero_by_soheil_karami||[]).push([[4987],{8229:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"Contents/Session2/Domain-Driven-Design/DDD Tactical Building\xa0Blocks","title":"DDD Tactical Building\xa0Blocks","description":"This page dives deeper into the code\u2011level patterns you\u2019ll use inside each bounded context.","source":"@site/docs/Contents/Session2/05-Domain-Driven-Design/02-DDD Tactical Building\xa0Blocks.md","sourceDirName":"Contents/Session2/05-Domain-Driven-Design","slug":"/Contents/Session2/Domain-Driven-Design/DDD Tactical Building\xa0Blocks","permalink":"/DotNet-From-Zero-by-Soheil-Karami/docs/Contents/Session2/Domain-Driven-Design/DDD Tactical Building\xa0Blocks","draft":false,"unlisted":false,"editUrl":"https://github.com/sohilww/DotNet-From-Zero-by-Soheil-Karami/blob/main/docs/Contents/Session2/05-Domain-Driven-Design/02-DDD Tactical Building\xa0Blocks.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"DDD Tactical Building\xa0Blocks"},"sidebar":"tutorialSidebar","previous":{"title":"DDD Overview","permalink":"/DotNet-From-Zero-by-Soheil-Karami/docs/Contents/Session2/Domain-Driven-Design/DDD-Overview"},"next":{"title":"Databases\u202f101","permalink":"/DotNet-From-Zero-by-Soheil-Karami/docs/Contents/Session2/Database/Database-101"}}');var s=r(4848),t=r(8453);const c={title:"DDD Tactical Building\xa0Blocks"},l="DDD Tactical\u202fBuilding\xa0Blocks",d={},o=[{value:"\ud83d\udd39 Entity",id:"-entity",level:2},{value:"\ud83d\udd39 Value\xa0Object",id:"-valueobject",level:2},{value:"\ud83d\udd39 Aggregate\xa0Root",id:"-aggregateroot",level:2},{value:"\ud83d\udd39 Repository",id:"-repository",level:2},{value:"\ud83d\udd39 Domain\xa0Service",id:"-domainservice",level:2},{value:"\ud83d\udd39 Factory",id:"-factory",level:2},{value:"\ud83d\udd39 Bonus Patterns",id:"-bonus-patterns",level:2},{value:"\ud83e\uddf9 Summary",id:"-summary",level:2}];function a(e){const n={blockquote:"blockquote",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"ddd-tacticalbuildingblocks",children:"DDD Tactical\u202fBuilding\xa0Blocks"})}),"\n",(0,s.jsxs)(n.p,{children:["This page dives deeper into the ",(0,s.jsx)(n.strong,{children:"code\u2011level patterns"})," you\u2019ll use inside each bounded context.",(0,s.jsx)(n.br,{}),"\n","Remember: these snippets are ",(0,s.jsx)(n.strong,{children:"simplified for learning"})," and will evolve as we integrate EF\u202fCore and tests."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-entity",children:"\ud83d\udd39 Entity"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Identity + Lifecycle"})," \u2014\xa0an object distinguished by ",(0,s.jsx)(n.code,{children:"Id"}),", not by its data alone."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public class Customer\r\n{\r\n    public Guid   Id   { get; }\r\n    public string Name { get; private set; }\r\n    public Email  Email { get; private set; }\r\n\r\n    public Customer(Guid id, string name, Email email)\r\n    {\r\n        Id    = id;\r\n        Name  = name;\r\n        Email = email;\r\n    }\r\n\r\n    public void ChangeEmail(Email newEmail) => Email = newEmail;\r\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,s.jsx)(n.strong,{children:"Questions for students"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Why is ",(0,s.jsx)(n.code,{children:"Id"})," immutable after construction?"]}),"\n",(0,s.jsx)(n.li,{children:"Could two Customers with identical data be considered different?"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,s.jsx)(n.strong,{children:"Practice"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Add a ",(0,s.jsx)(n.code,{children:"Deactivate()"})," method that sets an ",(0,s.jsx)(n.code,{children:"IsActive"})," flag and prevents further email changes."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-valueobject",children:"\ud83d\udd39 Value\xa0Object"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Immutability + Equality\xa0by\xa0Data"})," \u2014\xa0represents a descriptive aspect of the domain."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public class Address\r\n{\r\n    public string Street { get; }\r\n    public string City   { get; }\r\n    public string Zip    { get; }\r\n\r\n    public Address(string street, string city, string zip)\r\n    {\r\n        Street = street;\r\n        City   = city;\r\n        Zip    = zip;\r\n    }\r\n\r\n    public override bool Equals(object? obj) =>\r\n        obj is Address a &&\r\n        a.Street == Street && a.City == City && a.Zip == Zip;\r\n\r\n    public override int GetHashCode() =>\r\n        HashCode.Combine(Street, City, Zip);\r\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,s.jsx)(n.strong,{children:"Questions for students"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Why does the setter not exist?"}),"\n",(0,s.jsx)(n.li,{children:"What happens if you mutate a value object\u2014why is that dangerous?"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,s.jsx)(n.strong,{children:"Practice"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Create a ",(0,s.jsx)(n.code,{children:"Money"})," value object (Amount + Currency) that prevents mixing currencies in addition."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-aggregateroot",children:"\ud83d\udd39 Aggregate\xa0Root"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Consistency Boundary"})," \u2014\xa0enforces invariants for itself and child entities."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'public class Order : IAggregateRoot\r\n{\r\n    private readonly List<OrderLine> _lines = new();\r\n    public Guid Id { get; }\r\n\r\n    public Order(Guid id) => Id = id;\r\n\r\n    public void AddProduct(Product p, int qty)\r\n    {\r\n        if (qty <= 0) throw new ArgumentException("Qty > 0");\r\n        _lines.Add(new OrderLine(p, qty));\r\n    }\r\n\r\n    public int TotalItems() => _lines.Sum(l => l.Qty);\r\n}\r\n\r\npublic class OrderLine\r\n{\r\n    public Product Product { get; }\r\n    public int     Qty     { get; }\r\n\r\n    public OrderLine(Product product, int qty)\r\n    {\r\n        Product = product;\r\n        Qty     = qty;\r\n    }\r\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,s.jsx)(n.strong,{children:"Questions for students"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Why is ",(0,s.jsx)(n.code,{children:"OrderLine"})," created ",(0,s.jsx)(n.strong,{children:"inside"})," ",(0,s.jsx)(n.code,{children:"Order"}),", not exposed publicly?"]}),"\n",(0,s.jsxs)(n.li,{children:["What invariant does ",(0,s.jsx)(n.code,{children:"AddProduct"})," protect?"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,s.jsx)(n.strong,{children:"Practice"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Add ",(0,s.jsx)(n.code,{children:"RemoveProduct(Guid productId)"})," ensuring total quantity never drops below zero."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-repository",children:"\ud83d\udd39 Repository"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Collection\u2011like interface"})," for loading/saving aggregates without exposing ORM details."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public interface IOrderRepository\r\n{\r\n    Order Get(Guid id);\r\n    void  Add(Order order);\r\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,s.jsx)(n.strong,{children:"Questions for students"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Why does the interface return an ",(0,s.jsx)(n.em,{children:"aggregate root"})," instead of child entities?"]}),"\n",(0,s.jsxs)(n.li,{children:["Should repositories return ",(0,s.jsx)(n.code,{children:"IQueryable<Order>"}),"? Discuss pros/cons."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udfe9 ",(0,s.jsx)(n.strong,{children:"Practice\xa0Plus"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Implement an ",(0,s.jsx)(n.strong,{children:"in\u2011memory"})," ",(0,s.jsx)(n.code,{children:"OrderRepository"})," for unit tests."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-domainservice",children:"\ud83d\udd39 Domain\xa0Service"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Domain logic that doesn\u2019t belong in a single Entity/VO"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public class PricingService\r\n{\r\n    private readonly ITaxPolicy tax;\r\n    public PricingService(ITaxPolicy tax) => this.tax = tax;\r\n\r\n    public Money CalculatePrice(Product p, int qty)\r\n    {\r\n        var net = p.UnitPrice * qty;\r\n        return tax.Apply(net);\r\n    }\r\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,s.jsx)(n.strong,{children:"Questions for students"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Why not place ",(0,s.jsx)(n.code,{children:"CalculatePrice"})," inside ",(0,s.jsx)(n.code,{children:"Product"})," or ",(0,s.jsx)(n.code,{children:"Order"}),"?"]}),"\n",(0,s.jsx)(n.li,{children:"Which principle of SOLID does this separation support?"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,s.jsx)(n.strong,{children:"Practice"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Create a ",(0,s.jsx)(n.code,{children:"ShippingService"})," that decides shipping cost based on weight and destination zones."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-factory",children:"\ud83d\udd39 Factory"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Encapsulate complex creation"})," or enforce invariants when creating aggregates."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public static class InvoiceFactory\r\n{\r\n    public static Invoice CreateDraft(Order order)\r\n    {\r\n        var invoice = new Invoice(Guid.NewGuid());\r\n        foreach (var line in order.Lines)\r\n            invoice.AddItem(line.Product, line.Qty);\r\n        return invoice;\r\n    }\r\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udfe8 ",(0,s.jsx)(n.strong,{children:"Questions for students"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["What invariant might be lost if callers instantiated ",(0,s.jsx)(n.code,{children:"Invoice"})," directly?"]}),"\n",(0,s.jsx)(n.li,{children:"How does the factory benefit testing?"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udfe6 ",(0,s.jsx)(n.strong,{children:"Practice"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Build an ",(0,s.jsx)(n.code,{children:"OrderFactory"})," that verifies stock availability before creating an Order."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-bonus-patterns",children:"\ud83d\udd39 Bonus Patterns"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Pattern"}),(0,s.jsx)(n.th,{children:"Purpose"}),(0,s.jsx)(n.th,{children:"When to study"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Specification"})}),(0,s.jsx)(n.td,{children:"Encapsulate complex query rules"}),(0,s.jsx)(n.td,{children:"After LINQ session"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Domain Event"})}),(0,s.jsx)(n.td,{children:"Notify other parts of the model about significant changes"}),(0,s.jsx)(n.td,{children:"After EF\xa0Core introduces event dispatch"})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-summary",children:"\ud83e\uddf9 Summary"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Entities"})," have identity; ",(0,s.jsx)(n.strong,{children:"Value Objects"})," have meaning by value."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Aggregate Roots"})," guard invariants; ",(0,s.jsx)(n.strong,{children:"Repositories"})," abstract persistence."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Domain Services"})," and ",(0,s.jsx)(n.strong,{children:"Factories"})," keep entities small and focused."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>l});var i=r(6540);const s={},t=i.createContext(s);function c(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);